<?phpclass PluginYametrika_ModuleYametrika extends Module {	protected $ya_error;	protected $aResult = array();		public function Init() {			}		//	// Yandex Login - получение token 	//		public function YaLogin($ya_login, $ya_password, $ya_app_id, $ya_app_password, $ya_update_time)	{		$url = 'https://oauth.yandex.ru/token';		$ch = curl_init();		curl_setopt($ch, CURLOPT_URL,$url); // set url to post to		curl_setopt($ch, CURLOPT_FAILONERROR, 0);		curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);		curl_setopt($ch, CURLOPT_FOLLOWLOCATION, 1);// allow redirects		curl_setopt($ch, CURLOPT_RETURNTRANSFER,1); // return into a variable		curl_setopt($ch, CURLOPT_TIMEOUT, 9); 		curl_setopt($ch, CURLOPT_POST, 1); // set POST method		curl_setopt($ch, CURLOPT_POSTFIELDS, "grant_type=password&username=".urlencode($ya_login)."&password=".urlencode($ya_password)."&client_id={$ya_app_id}&client_secret={$ya_app_password}"); 		$result = curl_exec($ch); 		$status = curl_getinfo($ch, CURLINFO_HTTP_CODE);		curl_close($ch);  				$result_decode = json_decode($result, true);		if(!isset($result_decode['access_token']))		{			$this->ya_error = 'login_error';			return false;		}		$this->Cache_Set( $result_decode['access_token'], 'access_token', array(), $ya_update_time);				return $result_decode['access_token'];			}	//	// Получение token из cache. Если отсутствует то делаем login	//	public function YaToken()	{			if (false === ($ya_token = $this->Cache_Get( 'access_token' ))) 		{			return false;		}		return $ya_token;	}	//	// Запрос к Yandex Metrika на полученные данных	//	public function YaMetrikaQuery($aMethods, $aParams = array(), $ya_token, $ya_update_time) 	{		foreach($aMethods as $sMethodUrl => $sMethodName)		{			$sPath = "http://api-metrika.yandex.ru{$sMethodUrl}.json?";						foreach ($aParams as $key=>$value) 			{				$sPath .= "{$key}={$value}&";			}				$sPath .= "oauth_token=".$ya_token;			$cache_key = $ya_token.'_'.$sMethodUrl;			if (false === ($result = $this->Cache_Get( $cache_key ))) 			{				if($result = @file_get_contents($sPath)) 				{					$this->Cache_Set( $result, $cache_key , array(), $ya_update_time);				}				else				{					$this->Cache_Delete( 'access_token' );					$this->ya_error = 'file_get_contents_error';					return false;				}			}			$this->YaSuccess($sMethodName, $result);		}		return $this->aResult;	}			//	// Текущая ошибка	//	public function YaError()	{		return $this->ya_error;	}		//	// Формирование  ассоциативного массива результатов 	//	public function YaSuccess($sMethodName, $result)	{		$aResultOrigin = json_decode($result, true);				// Для тестирования при отсутствии данных. По умолчанию данный файл отсутствует.				if (is_file(dirname(__FILE__) . '/bluff.php')) 		{			include(dirname(__FILE__) . '/bluff.php');		}				//		$this->aResult[$sMethodName] = $aResultOrigin;	}		//	// Формирование периодов 	//	public function YaStatPeriod($ya_stat_time)	{		$date1 = '';		$date2 = date('Ymd');				if($ya_stat_time == 'w')		{			$sWeek = 60*60*24*7;			$date1 = date('Ymd', strtotime($date2) - $sWeek);		}		else if($ya_stat_time == 'm')		{			$sMonth = 60*60*24*30;			$date1 = date('Ymd', strtotime($date2) - $sMonth);				}		else if($ya_stat_time == 'k')		{			$sMonth = 60*60*24*30*3;			$date1 = date('Ymd', strtotime($date2) - $sMonth);				}				else if($ya_stat_time == 'y')		{			$date1 = date('Y').'0101';				}				return array($date1, $date2);	}}?>